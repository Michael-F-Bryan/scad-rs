use std::path::{Path, PathBuf};

pub fn add_preamble(generator: &str, mut text: String) -> String {
    let preable = format!("// Generated by `{generator}`. DO NOT EDIT!\n\n");
    text.insert_str(0, &preable);
    text
}

/// Make sure a file contains the specified tokens. If it doesn't, the file will
/// be updated and this function will trigger a panic.
#[track_caller]
pub fn ensure_file_contents(file: &Path, contents: &str) {
    if let Ok(original) = std::fs::read_to_string(file) {
        if original == contents {
            // Already up to date
            return;
        }
    }

    let project_root = project_root();
    let display_path = file.strip_prefix(&project_root).unwrap_or(file).display();

    eprintln!("\"{display_path}\" was not up to date... updating",);

    if std::env::var("CI").is_ok() {
        eprintln!("NOTE: Running in CI. Execute `cargo test` locally and commit the updated files.")
    }

    if let Some(parent) = file.parent() {
        let _ = std::fs::create_dir_all(parent);
    }

    std::fs::write(file, contents.as_bytes()).unwrap();

    panic!("\"{display_path}\" has been updated. Re-run the test and commit the updated files.");
}

/// Get the root directory for this repository.
pub fn project_root() -> PathBuf {
    let codegen_dir = Path::new(env!("CARGO_MANIFEST_DIR"));

    let root = codegen_dir.ancestors().nth(2).unwrap();
    assert!(root.join(".github").is_dir());

    root.to_path_buf()
}
