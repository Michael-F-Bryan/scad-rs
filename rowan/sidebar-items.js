window.SIDEBAR_ITEMS = {"enum":[["Direction",""],["NodeOrToken",""],["TokenAtOffset","There might be zero, one or two leaves at a given offset."],["WalkEvent","`WalkEvent` describes tree walking process."]],"mod":[["api",""],["ast","Working with abstract syntax trees."],["cursor","Implementation of the cursors â€“ API for convenient access to syntax trees."]],"struct":[["Checkpoint","A checkpoint for maybe wrapping a node. See `GreenNodeBuilder::checkpoint` for details."],["Children",""],["GreenNode","Internal node in the immutable tree. It has other nodes and tokens as children."],["GreenNodeBuilder","A builder for a green tree."],["GreenNodeData",""],["GreenToken","Leaf node in the immutable tree."],["GreenTokenData",""],["NodeCache","Interner for GreenTokens and GreenNodes"],["SyntaxKind","SyntaxKind is a type tag for each token or node."],["SyntaxText",""],["TextRange","A range in text, represented as a pair of [`TextSize`][struct@TextSize]."],["TextSize","A measure of text length. Also, equivalently, an index into text."]],"trait":[["TextLen","Primitives with a textual length that can be passed to [`TextSize::of`]."]]};